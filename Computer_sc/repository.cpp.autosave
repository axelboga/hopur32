#include "repository.h"
#include <fstream>
#include <iomanip>
#include <algorithm>

repository::repository() {
    compSciVector = vector<ComputerScientist>(); 
    ifstream ins ("list6.txt");
    if (ins.is_open()){
        ComputerScientist c;
        c.fillVectorFromList(ins, compSciVector); //fill the vector with what's in the file "list.6".
        ins.close();
    }
}

vector<ComputerScientist> repository::getVector() { 
    return compSciVector;
}

void repository::add(const ComputerScientist& c) {
    ComputerScientist temp = c;
    compSciVector.push_back(temp); //add new scientist to the vector

    ofstream outs;   //also add the new scientist to the list/file.
    outs.open("list6.txt", ios::app);
    if (outs.fail()){
        cout << "failed" << endl;
    }
    outs << temp;
    outs.close();
}

void repository::outputList(vector<ComputerScientist>& v) { 
    cout << " ________________________________________________________________________________" << endl;
    cout << "  First name\t Last name \t Gender\t\t Date of Birth\t Date of Death\t" << endl;
    cout << " ________________________________________________________________________________" << endl;

    for (unsigned int i = 0; i < v.size(); i++){
        cout << i+1 << ". "<< v[i] << endl;
    }
    cout << " ________________________________________________________________________________" << endl;
}

void repository::removeScientist(int number) {
    ComputerScientist c = compSciVector[number - 1]; //get name of the scientist to be deleted
    string name = c.getFirstName()+" "+c.getLastName();

    compSciVector.erase(compSciVector.begin() + (number - 1));  //remove the scientist from Vector
    
    ofstream outs("list6.txt", ios::out);   //remove the scientist from list by first clearing the list
    for(int i = 0; i != compSciVector.size(); i++) {  //and then outputting the new vector to the list.
        outs << compSciVector[i] << endl;                
    }
    outs.close();


    cout << "The scientist " << name << " has been removed from the list" << endl;
}

